# Generated by Django 2.0.2 on 2018-03-29 01:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import tdata.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tdata', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BatchTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.SmallIntegerField(choices=[(1, '低'), (2, '中'), (3, '高')], default=2, verbose_name='优先级')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('description', models.TextField(blank=True, verbose_name='描述')),
                ('publisher', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='发布用户')),
            ],
        ),
        migrations.CreateModel(
            name='CorrectDoubt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(verbose_name='意见')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('processed_at', models.DateTimeField(null=True, verbose_name='处理时间')),
                ('status', models.SmallIntegerField(choices=[(1, '未处理'), (2, '同意'), (3, '不同意')], verbose_name='状态')),
            ],
            options={
                'verbose_name': '文字校对存疑',
                'verbose_name_plural': '文字校对存疑',
            },
        ),
        migrations.CreateModel(
            name='CorrectSeg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.SmallIntegerField(default=1, verbose_name='差异Tag')),
                ('position', models.IntegerField(default=0, verbose_name='在校正本中的位置')),
                ('text1', models.TextField(blank=True, default='', verbose_name='文本1')),
                ('text2', models.TextField(blank=True, default='', verbose_name='文本2')),
                ('selected_text', models.TextField(blank=True, default='', null=True, verbose_name='修正文本')),
                ('page_no', models.SmallIntegerField(default=-1, verbose_name='卷中页序号')),
                ('line_no', models.SmallIntegerField(default=-1, verbose_name='页中行序号')),
                ('char_no', models.SmallIntegerField(default=-1, verbose_name='行中字序号')),
                ('doubt_comment', models.TextField(blank=True, default='', verbose_name='存疑意见')),
            ],
        ),
        migrations.CreateModel(
            name='DiffSeg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diffseg_no', models.SmallIntegerField(default=0, verbose_name='序号')),
                ('base_pos', models.IntegerField(default=0, verbose_name='在基准文本中位置')),
                ('base_length', models.IntegerField(default=0, verbose_name='基准文本中对应文本段长度')),
                ('recheck', models.BooleanField(default=False, verbose_name='待复查')),
                ('recheck_desc', models.TextField(default='', verbose_name='待复查说明')),
            ],
        ),
        migrations.CreateModel(
            name='DiffSegResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typ', models.SmallIntegerField(choices=[(1, '选择'), (2, '拆分')], default=1, verbose_name='结果类型')),
                ('selected_text', models.TextField(blank=True, default='', null=True, verbose_name='判取文本')),
                ('split_info', models.TextField(blank=True, default='{}', null=True, verbose_name='拆分信息')),
                ('selected', models.SmallIntegerField(blank=True, default=0, verbose_name='是否判取')),
                ('doubt', models.SmallIntegerField(blank=True, default=0, verbose_name='是否存疑')),
                ('doubt_comment', models.TextField(blank=True, default='', verbose_name='存疑意见')),
                ('all_equal', models.BooleanField(default=False, verbose_name='校勘判取结果都一致')),
                ('diffseg', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diffsegresults', to='tasks.DiffSeg')),
                ('merged_diffsegresults', models.ManyToManyField(blank=True, related_name='_diffsegresult_merged_diffsegresults_+', to='tasks.DiffSegResult')),
            ],
            options={
                'verbose_name': '校勘判取结果',
                'verbose_name_plural': '校勘判取结果',
            },
        ),
        migrations.CreateModel(
            name='DiffSegText',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, null=True, verbose_name='文本')),
                ('position', models.IntegerField(default=0, verbose_name='在卷文本中的位置（前有几个字）')),
                ('offset', models.IntegerField(default=0, verbose_name='所在卷文本在整部经文中位置')),
                ('start_char_pos', models.CharField(default='', max_length=32, null=True, verbose_name='起始经字位置')),
                ('end_char_pos', models.CharField(default='', max_length=32, null=True, verbose_name='结束经字位置')),
                ('diffseg', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diffsegtexts', to='tasks.DiffSeg')),
                ('tripitaka', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tdata.Tripitaka')),
            ],
        ),
        migrations.CreateModel(
            name='DoubtSeg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_no', models.SmallIntegerField(default=-1, verbose_name='Seg卷中页序号')),
                ('line_no', models.SmallIntegerField(default=-1, verbose_name='Seg页中行序号')),
                ('char_no', models.SmallIntegerField(default=-1, verbose_name='Seg行中字序号')),
                ('doubt_text', models.TextField(blank=True, default='', verbose_name='存疑文字段')),
                ('doubt_char_no', models.SmallIntegerField(default=-1, verbose_name='存疑行中字序号')),
                ('doubt_comment', models.TextField(blank=True, default='', verbose_name='存疑意见')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
            ],
        ),
        migrations.CreateModel(
            name='JudgeDoubt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(verbose_name='意见')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('processed_at', models.DateTimeField(null=True, verbose_name='处理时间')),
                ('status', models.SmallIntegerField(choices=[(1, '未处理'), (2, '同意'), (3, '不同意')], verbose_name='状态')),
                ('diffseg', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.DiffSeg')),
                ('processor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_judgedoubt', to=settings.AUTH_USER_MODEL, verbose_name='处理用户')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '校勘判取存疑',
                'verbose_name_plural': '校勘判取存疑',
            },
        ),
        migrations.CreateModel(
            name='LQMark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, null=True, verbose_name='创建时间')),
                ('lqreel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tdata.LQReel', verbose_name='龙泉藏经卷')),
                ('publisher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='发布用户')),
            ],
        ),
        migrations.CreateModel(
            name='LQMarkDoubt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(verbose_name='意见')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('processed_at', models.DateTimeField(null=True, verbose_name='处理时间')),
                ('status', models.SmallIntegerField(choices=[(1, '未处理'), (2, '同意'), (3, '不同意')], verbose_name='状态')),
            ],
            options={
                'verbose_name': '定本格式标注存疑',
                'verbose_name_plural': '定本格式标注存疑',
            },
        ),
        migrations.CreateModel(
            name='LQMarkUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typ', models.SmallIntegerField(default=0, verbose_name='类型')),
                ('start', models.IntegerField(default=0, verbose_name='起始字index')),
                ('end', models.IntegerField(default=0, verbose_name='结束字下一个index')),
                ('text', models.TextField(default='', verbose_name='文本')),
                ('lqmark', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.LQMark')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LQPunct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('punctuation', models.TextField(blank=True, null=True, verbose_name='标点')),
                ('body_punctuation', models.TextField(blank=True, null=True, verbose_name='文本标点')),
                ('created_at', models.DateTimeField(blank=True, null=True, verbose_name='创建时间')),
                ('lqreel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tdata.LQReel', verbose_name='龙泉藏经卷')),
                ('publisher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='发布用户')),
            ],
            options={
                'verbose_name': '定本标点结果',
                'verbose_name_plural': '定本标点结果',
            },
        ),
        migrations.CreateModel(
            name='LQPunctDoubt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(verbose_name='意见')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('processed_at', models.DateTimeField(null=True, verbose_name='处理时间')),
                ('status', models.SmallIntegerField(choices=[(1, '未处理'), (2, '同意'), (3, '不同意')], verbose_name='状态')),
                ('start_cid', models.CharField(max_length=23, verbose_name='起始经字号')),
                ('end_cid', models.CharField(max_length=23, verbose_name='结束经字号')),
                ('lqreel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tdata.LQReel')),
                ('processor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_lqpunctdoubt', to=settings.AUTH_USER_MODEL, verbose_name='处理用户')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '定本标点存疑',
                'verbose_name_plural': '定本标点存疑',
            },
        ),
        migrations.CreateModel(
            name='LQReelText',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', tdata.models.SutraTextField(blank=True, verbose_name='经文')),
                ('head', tdata.models.SutraTextField(blank=True, default='', verbose_name='经文正文前文本')),
                ('body', tdata.models.SutraTextField(blank=True, default='', verbose_name='经文正文')),
                ('tail', tdata.models.SutraTextField(blank=True, default='', verbose_name='经文正文后文本')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('lqreel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tdata.LQReel', verbose_name='龙泉藏经卷')),
                ('publisher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='发布用户')),
            ],
            options={
                'verbose_name': '校勘判取审定得到的卷经文',
                'verbose_name_plural': '校勘判取审定得到的卷经文',
            },
        ),
        migrations.CreateModel(
            name='Mark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, null=True, verbose_name='创建时间')),
                ('publisher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='发布用户')),
                ('reel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tdata.Reel')),
            ],
        ),
        migrations.CreateModel(
            name='MarkDoubt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(verbose_name='意见')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('processed_at', models.DateTimeField(null=True, verbose_name='处理时间')),
                ('status', models.SmallIntegerField(choices=[(1, '未处理'), (2, '同意'), (3, '不同意')], verbose_name='状态')),
            ],
            options={
                'verbose_name': '基础格式标注存疑',
                'verbose_name_plural': '基础格式标注存疑',
            },
        ),
        migrations.CreateModel(
            name='MarkUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typ', models.SmallIntegerField(default=0, verbose_name='类型')),
                ('start', models.IntegerField(default=0, verbose_name='起始字index')),
                ('end', models.IntegerField(default=0, verbose_name='结束字下一个index')),
                ('text', models.TextField(default='', verbose_name='文本')),
                ('mark', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.Mark')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Punct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('punctuation', models.TextField(blank=True, null=True, verbose_name='标点')),
                ('body_punctuation', models.TextField(blank=True, null=True, verbose_name='文本标点')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('publisher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='发布用户')),
                ('reel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tdata.Reel', verbose_name='实体藏经卷')),
            ],
            options={
                'verbose_name': '基础标点结果',
                'verbose_name_plural': '基础标点结果',
            },
        ),
        migrations.CreateModel(
            name='PunctDoubt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(verbose_name='意见')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('processed_at', models.DateTimeField(null=True, verbose_name='处理时间')),
                ('status', models.SmallIntegerField(choices=[(1, '未处理'), (2, '同意'), (3, '不同意')], verbose_name='状态')),
                ('start_cid', models.CharField(max_length=23, verbose_name='起始经字号')),
                ('end_cid', models.CharField(max_length=23, verbose_name='结束经字号')),
                ('processor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_punctdoubt', to=settings.AUTH_USER_MODEL, verbose_name='处理用户')),
                ('reel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tdata.Reel')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '基础标点存疑',
                'verbose_name_plural': '基础标点存疑',
            },
        ),
        migrations.CreateModel(
            name='ReelCorrectText',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', tdata.models.SutraTextField(blank=True, verbose_name='经文')),
                ('head', tdata.models.SutraTextField(blank=True, default='', verbose_name='经文正文前文本')),
                ('body', tdata.models.SutraTextField(blank=True, default='', verbose_name='经文正文')),
                ('tail', tdata.models.SutraTextField(blank=True, default='', verbose_name='经文正文后文本')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('publisher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='发布用户')),
                ('reel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reel_correct_texts', to='tdata.Reel', verbose_name='实体藏经卷')),
            ],
            options={
                'verbose_name': '文字校对得到的卷经文',
                'verbose_name_plural': '文字校对得到的卷经文',
            },
        ),
        migrations.CreateModel(
            name='ReelDiff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reel_no', models.SmallIntegerField(verbose_name='卷序号')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='发布时间')),
                ('diffseg_pos_lst', models.TextField(verbose_name='DiffSeg位置信息')),
                ('base_text', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reeldiffs', to='tasks.ReelCorrectText', verbose_name='基准文本')),
                ('lqsutra', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tdata.LQSutra')),
                ('publisher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='发布用户')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typ', models.SmallIntegerField(choices=[(1, '文字校对'), (2, '文字校对审定'), (3, '校勘判取'), (4, '校勘判取审定'), (5, '基础标点'), (6, '基础标点审定'), (7, '定本标点'), (8, '定本标点审定'), (9, '基础格式标注'), (10, '基础格式标注审定'), (11, '定本格式标注'), (12, '定本格式标注审定')], db_index=True, verbose_name='任务类型')),
                ('task_no', models.SmallIntegerField(choices=[(0, '无序号'), (1, '一'), (2, '二'), (3, '三'), (4, '四')], verbose_name='组合任务序号')),
                ('status', models.SmallIntegerField(choices=[(1, '未就绪'), (2, '待领取'), (3, '进行中'), (5, '已暂停'), (4, '已完成'), (6, '已催单'), (7, '已回收')], db_index=True, default=1, verbose_name='状态')),
                ('cur_focus', models.IntegerField(default=0, verbose_name='当前工作的条目')),
                ('result', tdata.models.SutraTextField(blank=True, verbose_name='结果')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='开始时间')),
                ('finished_at', models.DateTimeField(blank=True, null=True, verbose_name='完成时间')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('picked_at', models.DateTimeField(blank=True, null=True, verbose_name='领取时间')),
                ('priority', models.SmallIntegerField(choices=[(1, '低'), (2, '中'), (3, '高')], default=2, verbose_name='优先级')),
                ('progress', models.SmallIntegerField(default=0, verbose_name='进度')),
                ('base_reel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tdata.Reel', verbose_name='底本')),
                ('batchtask', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.BatchTask')),
                ('lqreel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tdata.LQReel')),
                ('lqtext', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lqpunct_tasks', to='tasks.LQReelText', verbose_name='龙泉藏经卷经文')),
                ('picker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='picked_tasks', to=settings.AUTH_USER_MODEL, verbose_name='领取用户')),
                ('publisher', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='published_tasks', to=settings.AUTH_USER_MODEL, verbose_name='发布用户')),
                ('reel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='tdata.Reel')),
                ('reeldiff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tasks.ReelDiff')),
                ('reeltext', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='punct_tasks', to='tasks.ReelCorrectText')),
            ],
            options={
                'verbose_name': '任务',
                'verbose_name_plural': '任务',
            },
        ),
        migrations.AddField(
            model_name='reelcorrecttext',
            name='task',
            field=models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tasks.Task', verbose_name='发布任务'),
        ),
        migrations.AddField(
            model_name='punct',
            name='reeltext',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.ReelCorrectText', verbose_name='实体藏经卷经文'),
        ),
        migrations.AddField(
            model_name='punct',
            name='task',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tasks.Task', verbose_name='发布任务'),
        ),
        migrations.AddField(
            model_name='markdoubt',
            name='markunit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.MarkUnit'),
        ),
        migrations.AddField(
            model_name='markdoubt',
            name='processor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_markdoubt', to=settings.AUTH_USER_MODEL, verbose_name='处理用户'),
        ),
        migrations.AddField(
            model_name='markdoubt',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='用户'),
        ),
        migrations.AddField(
            model_name='mark',
            name='reeltext',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.ReelCorrectText', verbose_name='实体藏经卷经文'),
        ),
        migrations.AddField(
            model_name='mark',
            name='task',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tasks.Task', verbose_name='发布任务'),
        ),
        migrations.AddField(
            model_name='lqreeltext',
            name='task',
            field=models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tasks.Task', verbose_name='发布任务'),
        ),
        migrations.AddField(
            model_name='lqpunct',
            name='reeltext',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.LQReelText', verbose_name='龙泉藏经卷经文'),
        ),
        migrations.AddField(
            model_name='lqpunct',
            name='task',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tasks.Task', verbose_name='发布任务'),
        ),
        migrations.AddField(
            model_name='lqmarkdoubt',
            name='lqmarkunit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.LQMarkUnit'),
        ),
        migrations.AddField(
            model_name='lqmarkdoubt',
            name='processor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_lqmarkdoubt', to=settings.AUTH_USER_MODEL, verbose_name='处理用户'),
        ),
        migrations.AddField(
            model_name='lqmarkdoubt',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='用户'),
        ),
        migrations.AddField(
            model_name='lqmark',
            name='reeltext',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.LQReelText', verbose_name='龙泉藏经卷经文'),
        ),
        migrations.AddField(
            model_name='lqmark',
            name='task',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tasks.Task', verbose_name='发布任务'),
        ),
        migrations.AddField(
            model_name='doubtseg',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doubt_segs', to='tasks.Task'),
        ),
        migrations.AddField(
            model_name='diffsegresult',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.Task'),
        ),
        migrations.AddField(
            model_name='diffseg',
            name='reeldiff',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tasks.ReelDiff'),
        ),
        migrations.AddField(
            model_name='correctseg',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.Task'),
        ),
        migrations.AddField(
            model_name='correctdoubt',
            name='correct_seg',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.CorrectSeg'),
        ),
        migrations.AddField(
            model_name='correctdoubt',
            name='processor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_correctdoubt', to=settings.AUTH_USER_MODEL, verbose_name='处理用户'),
        ),
        migrations.AddField(
            model_name='correctdoubt',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='用户'),
        ),
        migrations.AlterUniqueTogether(
            name='diffsegresult',
            unique_together={('task', 'diffseg')},
        ),
    ]
