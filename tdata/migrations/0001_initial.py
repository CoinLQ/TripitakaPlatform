# Generated by Django 2.0.2 on 2018-03-29 01:52

from django.db import migrations, models
import django.db.models.deletion
import tdata.lib.fields
import tdata.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Column',
            fields=[
                ('id', models.CharField(max_length=32, primary_key=True, serialize=False, verbose_name='列图ID')),
                ('x', models.SmallIntegerField(default=0, verbose_name='X坐标')),
                ('y', models.SmallIntegerField(default=0, verbose_name='Y坐标')),
                ('x1', models.SmallIntegerField(default=0, verbose_name='X1坐标')),
                ('y1', models.SmallIntegerField(default=0, verbose_name='Y1坐标')),
            ],
        ),
        migrations.CreateModel(
            name='Configuration',
            fields=[
                ('id', models.PositiveSmallIntegerField(editable=False, primary_key=True, serialize=False)),
                ('variant', models.TextField(default='', verbose_name='异体字列表')),
            ],
            options={
                'verbose_name': '配置',
                'verbose_name_plural': '配置',
            },
        ),
        migrations.CreateModel(
            name='LQReel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reel_no', models.SmallIntegerField(verbose_name='卷序号')),
                ('remark', models.TextField(blank=True, default='', verbose_name='备注')),
            ],
            options={
                'verbose_name': '龙泉藏经卷',
                'verbose_name_plural': '龙泉藏经卷',
            },
        ),
        migrations.CreateModel(
            name='LQSutra',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sid', models.CharField(max_length=8, unique=True, verbose_name='龙泉经目经号编码')),
                ('code', models.CharField(max_length=5, verbose_name='龙泉经目编码')),
                ('variant_code', models.CharField(default='0', max_length=1, verbose_name='龙泉经目别本编码')),
                ('name', models.CharField(max_length=64, verbose_name='龙泉经目名称')),
                ('total_reels', models.IntegerField(blank=True, default=1, verbose_name='总卷数')),
                ('author', models.CharField(blank=True, max_length=255, verbose_name='著译者')),
                ('remark', models.TextField(blank=True, default='', verbose_name='备注')),
            ],
            options={
                'verbose_name': '龙泉经目',
                'verbose_name_plural': '龙泉经目',
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('pid', models.CharField(max_length=21, primary_key=True, serialize=False, verbose_name='实体藏经页级总编码')),
                ('reel_page_no', models.SmallIntegerField(verbose_name='卷中页序号')),
                ('page_no', models.SmallIntegerField(verbose_name='页序号')),
                ('bar_no', models.CharField(default='0', max_length=1, verbose_name='栏序号')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, '初始化'), (1, '切分数据未上传'), (2, '数据解析失败'), (3, '字块数据未展开'), (4, '图片不存在'), (5, '列图不存在'), (6, '列图坐标不存在'), (7, '字块对应列图未准备'), (8, '字块对应列图不存在'), (9, '已准备好'), (10, '已入卷标记')], db_index=True, default=0, verbose_name='操作类型')),
                ('bar_info', tdata.lib.fields.JSONField(default=dict, verbose_name='栏列图信息')),
                ('text', tdata.models.SutraTextField(blank=True, verbose_name='经文')),
                ('cut_info', models.TextField(verbose_name='切分信息')),
                ('cut_updated_at', models.DateTimeField(null=True, verbose_name='更新时间')),
                ('cut_add_count', models.SmallIntegerField(default=0, verbose_name='切分信息增加字数')),
                ('cut_wrong_count', models.SmallIntegerField(default=0, verbose_name='切分信息识别错的字数')),
                ('cut_confirm_count', models.SmallIntegerField(default=0, verbose_name='切分信息需要确认的字数')),
                ('cut_verify_count', models.SmallIntegerField(default=0, verbose_name='切分信息需要确认的字数')),
                ('page_code', models.CharField(max_length=23)),
                ('char_count_lst', models.TextField(default='[]', verbose_name='每行字数列表')),
            ],
            options={
                'verbose_name': '实体藏经页',
                'verbose_name_plural': '实体藏经页',
            },
        ),
        migrations.CreateModel(
            name='Reel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reel_no', models.SmallIntegerField(verbose_name='卷序号')),
                ('start_vol', models.SmallIntegerField(verbose_name='起始册')),
                ('start_vol_page', models.SmallIntegerField(verbose_name='起始册的页序号')),
                ('end_vol', models.SmallIntegerField(verbose_name='终止册')),
                ('end_vol_page', models.SmallIntegerField(verbose_name='终止册的页序号')),
                ('path1', models.CharField(blank=True, default='', max_length=16, verbose_name='存储层次1')),
                ('path2', models.CharField(blank=True, default='', max_length=16, verbose_name='存储层次2')),
                ('path3', models.CharField(blank=True, default='', max_length=16, verbose_name='存储层次3')),
                ('edition_type', models.SmallIntegerField(choices=[(0, '未选择'), (1, '底本'), (2, '对校本'), (3, '参校本')], default=0, verbose_name='版本类型')),
                ('remark', models.TextField(blank=True, default='', verbose_name='备注')),
                ('image_ready', models.BooleanField(default=False, verbose_name='图片状态')),
                ('cut_ready', models.BooleanField(default=False, verbose_name='文字校对生成的切分数据状态')),
                ('column_ready', models.BooleanField(default=False, verbose_name='切列图状态')),
                ('ocr_ready', models.BooleanField(default=False, verbose_name='OCR数据状态')),
                ('correct_ready', models.BooleanField(default=False, verbose_name='是否有文字校对经文')),
            ],
            options={
                'verbose_name': '实体卷',
                'verbose_name_plural': '实体卷',
            },
        ),
        migrations.CreateModel(
            name='Sutra',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sid', models.CharField(max_length=8, unique=True, verbose_name='实体藏经|唯一经号编码')),
                ('code', models.CharField(max_length=5, verbose_name='实体经目编码')),
                ('variant_code', models.CharField(default='0', max_length=1, verbose_name='别本编码')),
                ('name', models.CharField(blank=True, max_length=64, verbose_name='实体经目名称')),
                ('total_reels', models.IntegerField(blank=True, default=1, verbose_name='总卷数')),
                ('author', models.CharField(blank=True, default='', max_length=32, verbose_name='作译者')),
                ('remark', models.TextField(blank=True, default='', verbose_name='备注')),
                ('lqsutra', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tdata.LQSutra', verbose_name='龙泉经目编码')),
            ],
            options={
                'verbose_name': '实体经',
                'verbose_name_plural': '实体经',
            },
        ),
        migrations.CreateModel(
            name='Tripitaka',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=2, unique=True, verbose_name='实体藏经版本编码')),
                ('name', models.CharField(max_length=32, verbose_name='实体藏经名称')),
                ('shortname', models.CharField(max_length=32, verbose_name='简称（用于校勘记）')),
                ('ocr_with_nobar', models.BooleanField(default=True, verbose_name='识别所用的图片不分栏')),
                ('bar_count', models.SmallIntegerField(default=2, verbose_name='识别所用的图片所用的分栏数')),
                ('remark', models.TextField(blank=True, default='', verbose_name='备注')),
                ('path1_char', models.CharField(blank=True, default='', max_length=1, verbose_name='存储层次1字母')),
                ('path1_name', models.CharField(blank=True, default='', max_length=16, verbose_name='存储层次1中文名')),
                ('path2_char', models.CharField(blank=True, default='', max_length=1, verbose_name='存储层次2字母')),
                ('path2_name', models.CharField(blank=True, default='', max_length=16, verbose_name='存储层次2中文名')),
                ('path3_char', models.CharField(blank=True, default='', max_length=1, verbose_name='存储层次3字母')),
                ('path3_name', models.CharField(blank=True, default='', max_length=16, verbose_name='存储层次3中文名')),
                ('cut_ready', models.BooleanField(default=False, verbose_name='切分数据状态')),
            ],
            options={
                'verbose_name': '实体藏',
                'verbose_name_plural': '实体藏',
            },
        ),
        migrations.CreateModel(
            name='Volume',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vol_no', models.SmallIntegerField(verbose_name='册序号')),
                ('page_count', models.IntegerField(verbose_name='册页数')),
                ('remark', models.TextField(default='', verbose_name='备注')),
                ('tripitaka', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tdata.Tripitaka')),
            ],
            options={
                'verbose_name': '实体册',
                'verbose_name_plural': '实体册',
            },
        ),
        migrations.CreateModel(
            name='ReelOCRText',
            fields=[
                ('reel', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='tdata.Reel', verbose_name='实体藏经卷')),
                ('text', tdata.models.SutraTextField(blank=True, default='', verbose_name='经文')),
                ('fixed', models.BooleanField(default=False, verbose_name='是否有调整')),
                ('f_start_page', models.CharField(blank=True, default='', max_length=18, null=True, verbose_name='起始页ID')),
                ('f_start_line_no', models.IntegerField(default=-1, verbose_name='起始页行序号')),
                ('f_start_char_no', models.IntegerField(default=-1, verbose_name='起始页的行中字序号')),
                ('f_end_page', models.CharField(blank=True, default='', max_length=18, null=True, verbose_name='终止页ID')),
                ('f_end_line_no', models.IntegerField(default=-1, verbose_name='终止页行序号')),
                ('f_end_char_no', models.IntegerField(default=-1, verbose_name='终止页的行中字序号')),
                ('f_text', tdata.models.SutraTextField(blank=True, default='', verbose_name='调整经文')),
            ],
            options={
                'verbose_name': '实体藏经卷OCR经文',
                'verbose_name_plural': '实体藏经卷OCR经文',
            },
        ),
        migrations.AddField(
            model_name='sutra',
            name='tripitaka',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tdata.Tripitaka', verbose_name='藏'),
        ),
        migrations.AddField(
            model_name='reel',
            name='sutra',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tdata.Sutra', verbose_name='实体藏经'),
        ),
        migrations.AddField(
            model_name='page',
            name='reel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tdata.Reel', verbose_name='实体藏经卷'),
        ),
        migrations.AddField(
            model_name='lqreel',
            name='lqsutra',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tdata.LQSutra', verbose_name='龙泉经目编码'),
        ),
        migrations.AddField(
            model_name='column',
            name='page',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tdata.Page', verbose_name='实体藏经页'),
        ),
        migrations.AlterUniqueTogether(
            name='reel',
            unique_together={('sutra', 'reel_no')},
        ),
        migrations.AlterUniqueTogether(
            name='lqreel',
            unique_together={('lqsutra', 'reel_no')},
        ),
    ]
